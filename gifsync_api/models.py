"""Model representations for objects stored in the GifSync API's database."""
from sqlalchemy.ext.compiler import compiles
from sqlalchemy.sql import expression
from sqlalchemy.types import DateTime

from .extensions import db


class UtcNow(expression.FunctionElement):  # pylint: disable=too-many-ancestors
    """Class for getting UTC timestamp from postgres server.

    This class is required by SQLAlchemy.
    See https://docs.sqlalchemy.org/en/14/core/compiler.html#utc-timestamp-function
    """

    type = DateTime()


@compiles(UtcNow, "postgresql")
def pg_utcnow(element, compiler, **kwargs):  # pylint: disable=unused-argument
    """Function for getting UTC timestamp from postgres server.

    This function is required by SQLAlchemy.
    See https://docs.sqlalchemy.org/en/14/core/compiler.html#utc-timestamp-function
    """
    return "TIMEZONE('utc', CURRENT_TIMESTAMP)"


class User(db.Model):  # pylint: disable=too-few-public-methods
    """Model representing a User object in the database.

    User has 3 columns: id, username, and created_at.

    * id: int, standard sequential primary key. Not nullable.
    * username: string, the user's username. Not nullable.
    * created_at: timestamp, utc timestamp based on server time. Not nullable,
        autogenerated.

    The User model also has a backref to the gifs owned by the User.
    """

    __tablename__ = "GifSyncUser"
    id = db.Column(db.Integer, primary_key=True, autoincrement=True, nullable=False)
    username = db.Column(db.String(80), nullable=False)
    created_at = db.Column(db.DateTime, server_default=UtcNow(), nullable=False)
    gifs = db.relationship(
        "Gif", backref="owner", cascade="all, delete-orphan", passive_deletes=True
    )


class Gif(db.Model):  # pylint: disable=too-few-public-methods
    """Model representing a Gif object in the database.

    Gif has 8 columns: id, owner_id, created_at, name, image, thumbnail,
    beats_per_loop, and custom_tempo.

    * id: int, standard sequential primary key. Not nullable.
    * owner_id: int, foreign key for the GifSyncUser that created this gif.
        Is a primary key. Not nullable.
    * created_at: timestamp, utc timestamp based on server time. Not nullable,
        autogenerated.
    * name: string, name of the gif. Not nullable.
    * image: string, URL pointing to an image. Not nullable.
    * thumbnail: string, URL pointing to an image. Not nullable.
    * beats_per_loop: float, the beats per loop of the gif. Not nullable.
    * custom_tempo: float, a custom tempo (if any) chosen for this gif to play at.

    The Gif model also has a backref to the owner of the Gif.
    """

    __tablename__ = "Gif"
    id = db.Column(db.Integer, primary_key=True, autoincrement=True, nullable=False)
    owner_id = db.Column(
        db.Integer,
        db.ForeignKey("GifSyncUser.id", ondelete="CASCADE"),
        primary_key=True,
        nullable=False,
    )
    name = db.Column(db.String(80), nullable=False)
    image = db.Column(db.String(256), nullable=False)
    thumbnail = db.Column(db.String(256), nullable=False)
    beats_per_loop = db.Column(db.Float, nullable=False)
    custom_tempo = db.Column(db.Float, nullable=True)
    created_at = db.Column(db.DateTime, server_default=UtcNow(), nullable=False)
